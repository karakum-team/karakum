// Generated by Karakum - do not modify it manually!

@file:JsModule("sandbox-base/typeLiteral/functionParameter")

package sandbox.base.typeLiteral

typealias HydrationState = String

external fun createMemoryRouter(routes: js.array.ReadonlyArray<String>, opts: CreateMemoryRouterOpts = definedExternally): Unit

external class MyClassWithLiteralInParameter {
constructor (options: MyClassWithLiteralInParameterOptions)
fun method(options: MyClassWithLiteralInParameterMethodOptions): String
}

external interface MyInterfaceWithLiteralInParameter {
fun method(options: MyInterfaceWithLiteralInParameterMethodOptions): String
}

external interface ShouldRevalidateFunction {
@seskar.js.JsNativeInvoke
operator fun  invoke(args: ShouldRevalidateFunctionArgs): Boolean
}

typealias BlockerFunction = (args: BlockerFunctionArgs) -> Boolean
external interface CreateMemoryRouterOpts {
var basename: String?
var hydrationData: HydrationState?
var initialEntries: js.array.ReadonlyArray<String>?
var initialIndex: Double?
}

external interface MyClassWithLiteralInParameterOptions {
var first: String
var second: Double
}

external interface MyClassWithLiteralInParameterMethodOptions {
var third: Boolean
var fourth: js.array.ReadonlyArray<String>
}

external interface MyInterfaceWithLiteralInParameterMethodOptions {
var first: Boolean
var second: js.array.ReadonlyArray<String>
}

external interface ShouldRevalidateFunctionArgs {
var currentUrl: String
}

external interface BlockerFunctionArgs {
var currentLocation: String
var nextLocation: String
var historyAction: () -> Unit
}